#!/usr/bin/php-cgi
<?php

	/**
	 * 
	
	 * 
	 * Description
	 * 
	 * @license		GNU General Public License
	 * @author		Thomas Brandstetter
	 * @link		http://www.pulsaros.com
	 * @email		admin@pulsaros.com
	 * 
	 * @file		setpool.php
	 * @version		0.7alpha
	 * @date		07/04/2011
	 * 
	 * Copyright (c) 2009-2011
	 */
	 
	/**
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any latewgr version.
	 * 
	 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT
	 * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,
	 * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR
	 * FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE
	 * OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS,
	 * COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.COPYRIGHT HOLDERS WILL NOT
	 * BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL
	 * DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.
	 * 
	 * You should have received a copy of the GNU General Public License
	 * along with this program. If not, see <http://gnu.org/licenses/>.
	*/
	
	function convByte($disk) {
		$disk['capacity'] = (int) $disk['capacity']; 
		if ($disk['type'] == "GB" && strlen($disk['capacity']) == 4) {
			$disksize = ''. round($disk['capacity']/1024) .'TB';
		}
		elseif ($disk['type'] == "GB" && strlen($disk['capacity']) < 4) {
			$disksize = ''. $disk['capacity'].'GB';
		}
		elseif ($disk['type'] == "MB" && strlen($disk['capacity']) == 4) {
			$disksize = ''. round($disk['capacity']/1024) .'GB';
		}
		elseif ($disk['type'] == "MB" && strlen($disk['capacity']) < 4) {
			$disksize = ''. $disk['capacity'].'MB';
		}
		return $disksize;
	}
	
	function getDisks($disk) 
	{
		$disk = exec('fdisk -l '. $disk .'|grep Disk|grep -v "doesn"|awk \'{print $2 $3" "$4}\'|awk -F: \'{print $1" "$2" "$3}\'');
		$data['disk'] = preg_split("/[\s,]+/", $disk);
		$output['device'] = $data['disk'][0];
		$output['capacity'] = $data['disk'][1];
		$output['type'] = $data['disk'][2];
		$output['id'] = exec('smartctl -a '. $data['disk'][0] .'|grep \'Serial Number\' | awk \'{print $3}\''); 
		return $output;
	}
	
	$xml = simplexml_load_file("/pulsarroot/configs/storage/pool.xml");
	foreach ($xml->xpath('//disk') as $disks) {
		if ($disks->device == $argv[1]) {
			$disk = getDisks($disks->device);
			$disks->status[0] = "new";
			$disks->capacity[0] = convByte($disk);
		}
	}
	$xml->asXML('/pulsarroot/configs/storage/pool.xml');
?>